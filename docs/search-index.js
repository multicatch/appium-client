var searchIndex = JSON.parse('{\
"appium_client":{"doc":"Rust client for Appium Server, for automated mobile app …","t":"GIDDGLLLLAALLLLALLLLLLLLLLLLAIIIIIILALLLLLLLLLLLLALLLLLALLLLLLALLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLRRRRRRRRDLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLENNNNNAAAALLAALLALLLALLAAALAAAAAALLLNDNINNNNINNNNNEEENIINNNNENNNNNNNIINNMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLDISSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIILLLEDINNNNNIENNNNLLLLLLLLLLLLLLLLLLLLLLKLLKLLKLLKLLLLLLLLLLLLLLLLEIINNNLLLLLLLLLLLLLLLLLLLILLLIILLLILNSSSSNNNNEDDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSSSSSSSNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSNNNNNNNNNNNNNNNNNNNNSSSNNNNNNNNINNNEINNNNNNSNNNNDNNNSNNNNSSSNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSNNNNNNNNNNNNNNNNNNNNNNNNNNNNSNNNNNNNNNNNINNNNNNNNNSSSSSSSNNNSSNNNNNNNNNNNNNNNNNNNNSSNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDIIMMLLLLLLLLLLLLLLLMMLMMLLMLLLLMLLLLLLLLIILLSDSIISLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIINIENNNDDLLLLLLLLLLLLMLLMLLLMLLLMLLLMMMLLLLLLLLLLLLLLLLLLLLLLMDNENILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLILLLILLLILLNNNNIENNNNNNNDNNNLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLMMLIDKLLLLLLLLLLLL","n":["AndroidClient","AppiumClientTrait","Client","ClientBuilder","IOSClient","borrow","borrow","borrow_mut","borrow_mut","capabilities","commands","connect","deref","deref_mut","drop","find","from","from","into","into","native","new","try_from","try_from","try_into","try_into","type_id","type_id","wait","AppCapable","AppiumCapability","AppiumSettingsCapable","UdidCapable","UiAutomator2AppCompatible","XCUITestAppCompatible","allow_test_packages","android","android_install_timeout","app","app_activity","app_install_strategy","app_package","app_push_timeout","app_wait_activity","app_wait_duration","app_wait_for_launch","app_wait_package","auto_accept_alerts","auto_launch","automation","automation_name","bundle_id","calendar_format","device_name","dont_stop_app_on_reset","empty","enforce_app_install","force_app_launch","full_reset","intent_action","intent_category","intent_flags","ios","language","locale","localizable_strings_dir","no_reset","optional_intent_arguments","other_apps","platform_version","print_page_source_on_find_failure","remote_apps_cache_limit","set_bool","set_number","set_setting","set_str","udid","uninstall_other_packages","AndroidCapabilities","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","eq","fmt","from","into","new","new_espresso","new_uiautomator","to_owned","try_from","try_into","type_id","ANDROID_UIAUTOMATOR2","ESPRESSO","GECKO","IOS_XCUI_TEST","MAC2","SAFARI","WINDOWS","YOUI_ENGINE","EmptyCapabilities","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","eq","fmt","from","into","new","to_owned","try_from","try_into","type_id","IOSCapabilities","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","eq","fmt","from","into","new","new_xcui","to_owned","try_from","try_into","type_id","AppiumCommand","Custom","FindElement","FindElementWithContext","FindElements","FindElementsWithContext","android","apps","authentication","battery","borrow","borrow_mut","clipboard","contexts","endpoint","eq","files","fmt","from","into","ios","is_legacy","is_new_session","keyboard","location","lock","method_and_body","network","recording","rotation","settings","strings","time","try_from","try_into","type_id","Accept","AndroidActivity","Call","CanReplaceValue","Cancel","Denied","EDGE","EVDO","ExecutesCDP","FULL","GPRS","GSM","Good","Great","GsmCallAction","GsmSignalStrength","GsmVoiceState","HSDPA","HasAndroidDeviceDetails","HasSupportedPerformanceDataType","Hold","Home","LTE","Moderate","NetworkSpeed","NoneOrUnknown","OFF","ON","Poor","Roaming","SCSD","Searching","StartsActivity","SupportsSpecialEmulatorCommands","UMTS","Unregistered","app_activity","app_package","app_wait_activity","app_wait_package","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","current_activity","current_package","display_density","eq","eq","eq","eq","execute_cdp_command","fmt","fmt","fmt","fmt","from","from","from","from","from","intent_action","intent_category","intent_flags","into","into","into","into","into","make_gsm_call","optional_intent_arguments","performance_data","replace_value","send_sms","serialize","serialize","serialize","serialize","set_gsm_voice_state","set_network_speed","set_power_ac","set_power_capacity","set_signal_strength","start_activity","stop_app","supported_performance_data_type","system_bars","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","AppState","InteractsWithApps","NOT_INSTALLED","NOT_RUNNING","RUNNING_IN_BACKGROUND","RUNNING_IN_BACKGROUND_SUSPENDED","RUNNING_IN_FOREGROUND","activate_app","all","app_state","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","complement","contains","deserialize","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","hash","insert","install_app","intersection","intersects","into","into_iter","is_all","is_app_installed","is_empty","iter","iter_names","not","remove","remove_app","run_app_in_background","serialize","set","sub","sub_assign","symmetric_difference","terminate_app","to_owned","toggle","try_from","try_into","type_id","union","AuthenticatesByFinger","PerformsTouchID","perform_touch_id","toggle_touch_id_enrollment","use_finger_print","AndroidBatteryState","BatteryInfo","CanBeCharged","Charging","Charging","Discharging","Full","Full","HasBattery","IOSBatteryState","NotCharging","Unknown","Unknown","Unplugged","battery_info","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","eq","eq","fmt","fmt","from","from","from","into","into","into","is_charging","is_charging","is_charging","is_full","is_full","is_full","is_invalid","is_invalid","is_invalid","is_plugged","is_plugged","is_plugged","level","state","state","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ClipboardContentType","HasAndroidClipboard","HasClipboard","Image","PlainText","URL","borrow","borrow_mut","clone","clone_into","eq","fmt","from","get_clipboard","get_clipboard_text","into","serialize","set_clipboard","set_clipboard_labeled","set_clipboard_text","set_clipboard_text_labeled","to_owned","try_from","try_into","type_id","SupportsContextSwitching","available_contexts","current_context","set_context","PullsFiles","PushesFiles","pull_file","pull_folder","push_file","ShakesDevice","shake","A","ALT_LEFT_ON","ALT_LOCKED","ALT_ON","ALT_RIGHT_ON","AVRInput","AVRPower","AltLeft","AltRight","AndroidKey","AndroidKeyFlag","AndroidKeyMetaModifier","Apostrophe","AppSwitch","Assist","Asterisk","At","B","Back","Backslash","Bookmark","Break","BrightnessDown","BrightnessUp","Button1","Button10","Button11","Button12","Button13","Button14","Button15","Button16","Button2","Button3","Button4","Button5","Button6","Button7","Button8","Button9","ButtonA","ButtonB","ButtonC","ButtonL1","ButtonL2","ButtonMode","ButtonR1","ButtonR2","ButtonSelect","ButtonStart","ButtonThumbL","ButtonThumbR","ButtonX","ButtonY","ButtonZ","C","CANCELED","CANCELED_LONG_PRESS","CAPS_LOCK_ON","CAP_LOCKED","CTRL_LEFT_ON","CTRL_ON","CTRL_RIGHT_ON","Calculator","Calendar","Call","Camera","CapsLock","Captions","ChannelDown","ChannelUp","Clear","Comma","Contacts","Copy","CtrlLeft","CtrlRight","Cut","D","DEL","DPadCenter","DPadDown","DPadLeft","DPadUp","DVR","Default","Digit0","Digit1","Digit2","Digit3","Digit4","Digit5","Digit6","Digit7","Digit8","Digit9","DpadDownLeft","DpadDownRight","DpadRight","DpadUpLeft","DpadUpRight","E","EDITOR_ACTION","Eisu","EndCall","Enter","Envelope","Equals","Escape","Explorer","F","F1","F10","F11","F12","F2","F3","F4","F5","F6","F7","F8","F9","FALLBACK","FROM_SYSTEM","FUNCTION_ON","Focus","Forward","ForwardDel","Function","G","Grave","Guide","H","HasOnScreenKeyboard","HeadsetHook","Help","Henkan","HideKeyboardStrategy","HidesKeyboard","Home","I","Info","Insert","J","K","KEEP_TOUCH_MODE","Kana","KatakanaHiragana","Key11","Key12","KeyEvent","KeycodeZoomIn","KeycodeZoomOut","L","LONG_PRESS","LanguageSwitch","LastChannel","LeftBracket","M","META_LEFT_ON","META_ON","META_RIGHT_ON","MannerMode","MediaAudioTrack","MediaClose","MediaEject","MediaFastForward","MediaNext","MediaPause","MediaPlay","MediaPlayPause","MediaPrevious","MediaRecord","MediaRewind","MediaSkipBackward","MediaSkipForward","MediaStepBackward","MediaStepForward","MediaStop","MediaTopMenu","Menu","MetaLeft","MetaRight","Minus","Mode3D","MoveEnd","MoveHome","Muhenkan","Music","Mute","N","NUM","NUM_LOCK_ON","NavigateIn","NavigateNext","NavigateOut","NavigatePrevious","Notification","NumLock","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","NumpadAdd","NumpadComma","NumpadDivide","NumpadDot","NumpadEnter","NumpadEquals","NumpadLeftParen","NumpadMultiply","NumpadRightParen","NumpadSubtract","O","P","PREDISPATCH","PageDown","PageUp","Pairing","Paste","Period","PictSymbols","Plus","Pound","Power","Press","PressKey","PressesKey","ProgBlue","ProgGreen","ProgRed","ProgYellow","Q","R","RightBracket","Ro","S","SCROLL_LOCK_ON","SELECTING","SHIFT_LEFT_ON","SHIFT_ON","SHIFT_RIGHT_ON","SOFT_KEYBOARD","START_TRACKING","STBInput","STBPower","SYM","SYM_LOCKED","SYM_ON","SYSRQ","ScrollLock","Search","Semicolon","Settings","ShiftLeft","ShiftRight","Slash","Sleep","SoftLeft","SoftRight","SoftSleep","Space","Stem1","Stem2","Stem3","StemPrimary","SwipeDown","SwitchCharset","T","TAINTED","TRACKING","TV","TVAntennaCable","TVAudioDescription","TVAudioDescriptionMixDown","TVAudioDescriptionMixUp","TVContentsMenu","TVDataService","TVInput","TVInputComponent1","TVInputComponent2","TVInputComposite1","TVInputComposite2","TVInputHdmi1","TVInputHdmi2","TVInputHdmi3","TVInputHdmi4","TVInputVga1","TVMediaContextMenu","TVNetwork","TVNumberEntry","TVPower","TVRadioService","TVSatellite","TVSatelliteBS","TVSatelliteCS","TVSatelliteService","TVTeletext","TVTerrestrialAnalog","TVTerrestrialDigital","TVTimerProgramming","TVZoomMode","Tab","TapOut","TapOutside","U","Unknown","V","VIRTUAL_HARD_KEY","VoiceAssist","VolumeDown","VolumeMute","VolumeUp","W","WakeUp","Window","X","Y","Yen","Z","ZenkakuHankaku","add_flag","add_metamodifier","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","complement","complement","contains","contains","deserialize","difference","difference","empty","empty","eq","eq","eq","eq","extend","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_name","from_name","hash","hash","hash","hide_keyboard","hide_keyboard_with_key","hide_keyboard_with_strategy","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","keyboard_shown","keycode","long_press_key","metastate","new","not","not","press_key","remove","remove","remove_flag","remove_metamodifier","serialize","serialize","serialize","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","with_flag","with_metamodifier","AndroidGeoLocation","Location","SupportsAndroidLocation","SupportsLocation","altitude","altitude","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","fmt","fmt","from","from","into","into","latitude","latitude","location","longitude","longitude","new","new","satellites","serialize","serialize","set_android_location","set_location","speed","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","LocksDevice","UnlocksDevice","lock_device","unlock_device","AIRPLANE_MODE_MASK","ConnectionState","DATA_MASK","HasNetworkState","SupportsNetworkStateManagement","WIFI_MASK","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","get_connection","hash","insert","intersection","intersects","into","into_iter","is_all","is_empty","iter","iter_names","not","remove","set","set_connection","sub","sub_assign","symmetric_difference","to_owned","toggle","toggle_airplane_mode","toggle_data","toggle_wifi","try_from","try_into","type_id","union","AndroidCanRecordScreen","CanRecordScreen","High","IOSCanRecordScreen","IOSVideoQuality","Low","Medium","Photo","ScreenRecordingCredentials","ScreenRecordingUploadOptions","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","credentials","empty","eq","file_field_name","fmt","fmt","fmt","form_fields","from","from","from","headers","into","into","into","method","pass","remote_path","serialize","start_recording","start_recording","start_recording_screen","start_recording_with_options","stop_recording","stop_recording","stop_recording_screen","stop_recording_with_options","to_map","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","user","DeviceRotation","Landscape","Orientation","Portrait","SupportsRotation","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deserialize","deserialize","eq","eq","fmt","fmt","fmt","from","from","into","into","new","orientation","rotation","serialize","set_orientation","set_rotation","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","HasSettings","get_settings","set_setting","set_settings","HasAppStrings","app_strings","app_strings_default_lang","app_strings_from_file","HasDeviceTime","device_time","device_time_with_format","AccessibilityId","AndroidDataMatcher","AndroidViewMatcher","AndroidViewTag","AppiumFind","By","ClassName","Custom","CustomKind","Id","Image","IosClassChain","IosNsPredicate","LocatorParameters","Name","UiAutomator","Xpath","accessibility_id","android_data_matcher","android_view_matcher","android_view_tag","borrow","borrow","borrow_mut","borrow_mut","class_name","clone","clone","clone_into","clone_into","custom","custom_kind","eq","eq","find_all_by","find_by","fmt","fmt","from","from","from","id","image","into","into","ios_class_chain","ios_ns_predicate","name","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","uiautomator","using","value","xpath","AppiumWait","Wait","appium_wait","at_most","borrow","borrow_mut","check_every","fmt","for_element","for_elements","from","into","try_from","try_into","type_id"],"q":[[0,"appium_client"],[29,"appium_client::capabilities"],[78,"appium_client::capabilities::android"],[97,"appium_client::capabilities::automation"],[105,"appium_client::capabilities::empty"],[122,"appium_client::capabilities::ios"],[140,"appium_client::commands"],[176,"appium_client::commands::android"],[284,"appium_client::commands::apps"],[353,"appium_client::commands::authentication"],[358,"appium_client::commands::battery"],[420,"appium_client::commands::clipboard"],[445,"appium_client::commands::contexts"],[449,"appium_client::commands::files"],[454,"appium_client::commands::ios"],[456,"appium_client::commands::keyboard"],[947,"appium_client::commands::location"],[989,"appium_client::commands::lock"],[993,"appium_client::commands::network"],[1057,"appium_client::commands::recording"],[1120,"appium_client::commands::rotation"],[1156,"appium_client::commands::settings"],[1160,"appium_client::commands::strings"],[1164,"appium_client::commands::time"],[1167,"appium_client::find"],[1229,"appium_client::wait"],[1244,"fantoccini::error"],[1245,"core::result"],[1246,"hyper::client::connect::sealed"],[1247,"core::marker"],[1248,"core::marker"],[1249,"core::marker"],[1250,"hyper_tls::client"],[1251,"fantoccini"],[1252,"core::any"],[1253,"core::time"],[1254,"serde_json::number"],[1255,"serde_json::value"],[1256,"core::fmt"],[1257,"core::fmt"],[1258,"core::option"],[1259,"url::parser"],[1260,"http::method"],[1261,"alloc::string"],[1262,"core::future::future"],[1263,"alloc::boxed"],[1264,"core::pin"],[1265,"std::collections::hash::map"],[1266,"fantoccini::elements"],[1267,"serde::ser"],[1268,"serde::de"],[1269,"core::iter::traits::collect"],[1270,"core::hash"],[1271,"bitflags::iter"],[1272,"bitflags::iter"],[1273,"serde_json::error"],[1274,"fantoccini::error"],[1275,"alloc::vec"]],"d":["Client used to automate Android testing","","Generic Appium client","Client builder","Client used to automate iOS testing","","","","","A set of parameters used to start an Appium session.","Commands that you can issue to Appium server","","","","","Find API for locating elements on screen","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Wait API for waiting for elements to appear on screen","Capabilities for drivers that are used to run an app.","Extensions to easily define capabilities for Appium …","Capabilities for Settings API (…","Capabilities for drivers that are used to run test on a …","Capabilities for UiAutomator2 (Android).","Capabilities for XCUITest (iOS).","Use packages built with test flag.","Android capabilities","Timeout in milliseconds used to wait for an apk to install …","The path to an installable application.","Activity name for the Android activity you want to launch …","Select application installation strategy for real devices.","Java package of the Android app you want to run.","Timeout for application upload in millisecond, on real …","Activity name/names, comma separated, for the Android …","Timeout in milliseconds used to wait for the …","Block until app starts.","Java package of the Android app you want to wait for.","Accept all iOS alerts automatically if they pop up.","Whether to launch the application under test automatically …","Automation name constants ","Set the automation driver to use (the engine for tests, …","Bundle id of app. Looks like app package (<code>com.my.app</code>).","Calendar format to set for the iOS Simulator (eg. <code>gregorian</code>…","The name of a particular device to automate.","Set it to true if you don’t want the application to be …","Empty capabilities (for creating a blank client)","Reinstall app (even if it’s a downgrade).","Always start app forcefully when testing starts.","Perform a complete reset.","Set an optional intent action to be applied when starting …","Set an optional intent category to be applied when …","Set an optional intent flags to be applied when starting …","iOS capabilities","Language to set for the simulator / emulator.","Locale to set for the simulator / emulator.","Where to look for localizable strings. Default en.lproj","Don’t reset app state before this session.","Set an optional intent arguments to be applied when …","App or list of apps (as a JSON array) to install prior to …","The version of a platform, e.g., for iOS, “16.0”","When a find operation fails, print the current page …","Sets the maximum amount of application packages to be …","Sets a boolean capability.","Sets a number capability.","","Sets a string capability.","Device id.","Allows to set one or more comma-separated package …","Android capabilities","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates new empty capability set for Android (with driver …","Creates empty capability set for Espresso Android driver.","Creates empty capability set for UiAutomator2 Android …","","","","","https://github.com/appium/appium-uiautomator2-driver","https://github.com/appium/appium-espresso-driver","https://github.com/appium/appium-geckodriver","https://github.com/appium/appium-xcuitest-driver","https://github.com/appium/appium-mac2-driver","https://github.com/appium/appium-safari-driver","https://github.com/appium/appium-windows-driver","Third-party drivers …","Empty capabilities - for use in tests or with a platform …","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates new empty capability set","","","","","iOS capabilities","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates new empty capability set for iOS (with driver …","Creates empty capability set for XCuiTest iOS driver.","","","","","Basic Appium commands","","","","","","Android-specific features","Management of apps on the device","Device authentication","Battery info","","","Clipboard management","Context API (https://appium.io/docs/en/2.1/guides/context/)","","","Files management","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","iOS-specific features","","","Keyboard management","Geolocation","Lock and unlock the device","","Network management","Screen recording","Device orientation and rotation","Settings API (…","App strings (localized text from app)","Device time","","","","","","","Replacing element value (instead of retyping into field)","","","","","Chrome DevTools protocol commands (Chrome and webview)","","","","","","","","","","Android device details","Device traits that Appium is able to read","","","","","","","","","","","","","Start or check Android actitivies","Special Android emulator commands like “send SMS”","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inspect or install other apps","","","","","","","Get a flags value with all known bits set.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The intersection of a source flags value with the …","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","Finger authentication (Android authentication)","TouchID (iPhone authentication)","Simulate touchId event.","Enrolls touchId in iOS Simulators. This call will only …","","","","","","","","","","Device battery level and state","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieve and save data in device’s clipboard","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Check current context or switch context (…","","","","Download files and folders from the device (to your …","Upload files and folders onto the device","Pulls a single file from device","Pulls folder and returns zip file containing the content","","Simulate device shake","Simulate shaking the device.","Key code constant: ‘A’ key.","This mask is used to check whether the left ALT meta key …","ALT key locked. Reserved for use by MetaKeyKeyListener for …","This mask is used to check whether one of the ALT meta …","This mask is used to check whether the right the ALT meta …","Key code constant: A/V Receiver input key. On TV remotes, …","Key code constant: A/V Receiver power key. On TV remotes, …","Key code constant: Left Alt modifier key.","Key code constant: Right Alt modifier key.","","","","Key code constant: ‘’’ (apostrophe) key.","Key code constant: App switch key. Should bring up the …","Key code constant: Assist key. Launches the global assist …","Key code constant: ‘*’ key.","Key code constant: ‘@’ key.","Key code constant: ‘B’ key.","Key code constant: Back key.","Key code constant: ’&#39; key.","Key code constant: Bookmark key. On some TV remotes, …","Key code constant: Break / Pause key.","Key code constant: Brightness Down key. Adjusts the screen …","Key code constant: Brightness Up key. Adjusts the screen …","Key code constant: Generic Game Pad Button #1.","Key code constant: Generic Game Pad Button #10.","Key code constant: Generic Game Pad Button #11.","Key code constant: Generic Game Pad Button #12.","Key code constant: Generic Game Pad Button #13.","Key code constant: Generic Game Pad Button #14.","Key code constant: Generic Game Pad Button #15.","Key code constant: Generic Game Pad Button #16.","Key code constant: Generic Game Pad Button #2.","Key code constant: Generic Game Pad Button #3.","Key code constant: Generic Game Pad Button #4.","Key code constant: Generic Game Pad Button #5.","Key code constant: Generic Game Pad Button #6.","Key code constant: Generic Game Pad Button #7.","Key code constant: Generic Game Pad Button #8.","Key code constant: Generic Game Pad Button #9.","Key code constant: A Button key. On a game controller, the …","Key code constant: B Button key. On a game controller, the …","Key code constant: C Button key. On a game controller, the …","Key code constant: L1 Button key. On a game controller, …","Key code constant: L2 Button key. On a game controller, …","Key code constant: Mode Button key. On a game controller, …","Key code constant: R1 Button key. On a game controller, …","Key code constant: R2 Button key. On a game controller, …","Key code constant: Select Button key. On a game …","Key code constant: Start Button key. On a game controller, …","Key code constant: Left Thumb Button key. On a game …","Key code constant: Right Thumb Button key. On a game …","Key code constant: X Button key. On a game controller, the …","Key code constant: Y Button key. On a game controller, the …","Key code constant: Z Button key. On a game controller, the …","Key code constant: ‘C’ key.","When associated with up key events, this indicates that …","Set when a key event has AndroidKeyFlag::CANCELED set …","This mask is used to check whether the CAPS LOCK meta key …","SHIFT key locked in CAPS mode. Reserved for use by …","This mask is used to check whether the left CTRL meta key …","This mask is used to check whether one of the CTRL meta …","This mask is used to check whether the right CTRL meta key …","Key code constant: Calculator special function key. Used …","Key code constant: Calendar special function key. Used to …","Key code constant: Call key.","Key code constant: Camera key. Used to launch a camera …","Key code constant: Caps Lock key.","Key code constant: Toggle captions key. Switches the mode …","Key code constant: Channel down key. On TV remotes, …","Key code constant: Channel up key. On TV remotes, …","Key code constant: Clear key.","Key code constant: ‘,’ key.","Key code constant: Contacts special function key. Used to …","Key code constant: Copy key.","Key code constant: Left Control modifier key.","Key code constant: Right Control modifier key.","Key code constant: Cut key.","Key code constant: ‘D’ key.","Key code constant: Backspace key. Deletes characters …","Key code constant: Directional Pad Center key. May also be …","Key code constant: Directional Pad Down key. May also be …","Key code constant: Directional Pad Left key. May also be …","Key code constant: Directional Pad Up key. May also be …","Key code constant: DVR key. On some TV remotes, switches …","","Key code constant: ‘0’ key.","Key code constant: ‘1’ key.","Key code constant: ‘2’ key.","Key code constant: ‘3’ key.","Key code constant: ‘4’ key.","Key code constant: ‘5’ key.","Key code constant: ‘6’ key.","Key code constant: ‘7’ key.","Key code constant: ‘8’ key.","Key code constant: ‘9’ key.","Key code constant: Directional Pad Down-Left.","Key code constant: Directional Pad Down-Right.","Key code constant: Directional Pad Right key. May also be …","Key code constant: Directional Pad Up-Left.","Key code constant: Directional Pad Up-Right.","Key code constant: ‘E’ key.","This mask is used for compatibility, to identify enter …","Key code constant: Japanese alphanumeric key.","Key code constant: End Call key.","Key code constant: Enter key.","Key code constant: Envelope special function key. Used to …","Key code constant: ‘=’ key.","Key code constant: Escape key.","Key code constant: Explorer special function key. Used to …","Key code constant: ‘F’ key.","Key code constant: F1 key.","Key code constant: F10 key.","Key code constant: F11 key.","Key code constant: F12 key.","Key code constant: F2 key.","Key code constant: F3 key.","Key code constant: F4 key.","Key code constant: F5 key.","Key code constant: F6 key.","Key code constant: F7 key.","Key code constant: F8 key.","Key code constant: F9 key.","Set when a key event has been synthesized to implement …","This mask is set if an event was known to come from a …","This mask is used to check whether the FUNCTION meta key …","Key code constant: Camera Focus key. Used to focus the …","Key code constant: Forward key. Navigates forward in the …","Key code constant: Forward Delete key. Deletes characters …","Key code constant: Function modifier key.","Key code constant: ‘G’ key.","Key code constant: ‘`’ (backtick) key.","Key code constant: Guide key. On TV remotes, shows a …","Key code constant: ‘H’ key.","Check onscreen keyboard","Key code constant: Headset Hook key. Used to hang up calls …","Key code constant: Help key.","Key code constant: Japanese conversion key.","","Hide onscreen keyboard","Key code constant: Home key. This key is handled by the …","Key code constant: ‘I’ key.","Key code constant: Info key. Common on TV remotes to show …","Key code constant: Insert key. Toggles insert / overwrite …","Key code constant: ‘J’ key.","Key code constant: ‘K’ key.","This mask is set if we don’t want the key event to cause …","Key code constant: Japanese kana key.","Key code constant: Japanese katakana / hiragana key.","Key code constant: ‘11’ key.","Key code constant: ‘12’ key.","","Key code constant: Zoom in key.","Key code constant: Zoom out key.","Key code constant: ‘L’ key.","This flag is set for the first key repeat that occurs …","Key code constant: Language Switch key. Toggles the …","Key code constant: Last Channel key. Goes to the last …","Key code constant: ‘[’ key.","Key code constant: ‘M’ key.","This mask is used to check whether the left META meta key …","This mask is used to check whether one of the META meta …","This mask is used to check whether the right META meta key …","Key code constant: Manner Mode key. Toggles silent or …","Key code constant: Audio Track key. Switches the audio …","Key code constant: Close media key. May be used to close a …","Key code constant: Eject media key. May be used to eject a …","Key code constant: Fast Forward media key.","Key code constant: Play Next media key.","Key code constant: Pause media key.","Key code constant: Play media key.","Key code constant: Play/Pause media key.","Key code constant: Play Previous media key.","Key code constant: Record media key.","Key code constant: Rewind media key.","Key code constant: Skip backward media key.","Key code constant: Skip forward media key.","Key code constant: Step backward media key. Steps media …","Key code constant: Step forward media key. Steps media …","Key code constant: Stop media key.","Key code constant: Media Top Menu key. Goes to the top of …","Key code constant: Menu key.","Key code constant: Left Meta modifier key.","Key code constant: Right Meta modifier key.","Key code constant: ‘-’.","Key code constant: 3D Mode key. Toggles the display …","Key code constant: End Movement key. Used for scrolling or …","Key code constant: Home Movement key. Used for scrolling …","Key code constant: Japanese non-conversion key.","Key code constant: Music special function key. Used to …","Key code constant: Mute key. Mutes the microphone, unlike …","Key code constant: ‘N’ key.","Key code constant: Number modifier key. Used to enter …","This mask is used to check whether the NUM LOCK meta key …","Key code constant: Navigate in key. Activates the item …","Key code constant: Navigate to next key. Advances to the …","Key code constant: Navigate out key. Backs out one level …","Key code constant: Navigate to previous key. Goes backward …","Key code constant: Notification key.","Key code constant: Num Lock key. This is the Num Lock key; …","Key code constant: Numeric keypad ‘0’ key.","Key code constant: Numeric keypad ‘1’ key.","Key code constant: Numeric keypad ‘2’ key.","Key code constant: Numeric keypad ‘3’ key.","Key code constant: Numeric keypad ‘4’ key.","Key code constant: Numeric keypad ‘5’ key.","Key code constant: Numeric keypad ‘6’ key.","Key code constant: Numeric keypad ‘7’ key.","Key code constant: Numeric keypad ‘8’ key.","Key code constant: Numeric keypad ‘9’ key.","Key code constant: Numeric keypad ‘+’ key (for …","Key code constant: Numeric keypad ‘,’ key (for …","Key code constant: Numeric keypad ‘/’ key (for …","Key code constant: Numeric keypad ‘.’ key (for …","Key code constant: Numeric keypad Enter key.","Key code constant: Numeric keypad ‘=’ key.","Key code constant: Numeric keypad ‘(’ key.","Key code constant: Numeric keypad ‘*’ key (for …","Key code constant: Numeric keypad ‘)’ key.","Key code constant: Numeric keypad ‘-’ key (for …","Key code constant: ‘O’ key.","Key code constant: ‘P’ key.","Signifies that the key is being predispatched.","Key code constant: Page Down key.","Key code constant: Page Up key.","Key code constant: Pairing key. Initiates peripheral …","Key code constant: Paste key.","Key code constant: ‘.’ key.","Key code constant: Picture Symbols modifier key. Used to …","Key code constant: ‘+’ key.","Key code constant: ‘#’ key.","Key code constant: Power key.","","","Send key presses to device","Key code constant: Blue “programmable” key. On TV …","Key code constant: Green “programmable” key. On TV …","Key code constant: Red “programmable” key. On TV …","Key code constant: Yellow “programmable” key. On TV …","Key code constant: ‘Q’ key.","Key code constant: ‘R’ key.","Key code constant: ‘]’ key.","Key code constant: Japanese Ro key.","Key code constant: ‘S’ key.","This mask is used to check whether the SCROLL LOCK meta …","Text is in selection mode. Reserved for use by …","This mask is used to check whether the left SHIFT meta key …","This mask is used to check whether one of the SHIFT meta …","This mask is used to check whether the right SHIFT meta …","This mask is set if the key event was generated by a …","Private control to determine when an app is tracking a key …","Key code constant: Set-top-box input key. On TV remotes, …","Key code constant: Set-top-box power key. On TV remotes, …","Key code constant: Symbol modifier key. Used to enter …","SYM key locked. Reserved for use by MetaKeyKeyListener for …","This mask is used to check whether the SYM meta key is …","Key code constant: System Request / Print Screen key.","Key code constant: Scroll Lock key.","Key code constant: Search key.","Key code constant: ‘;’ key.","Key code constant: Settings key. Starts the system …","Key code constant: Left Shift modifier key.","Key code constant: Right Shift modifier key.","Key code constant: ‘/’ key.","Key code constant: Sleep key. Puts the device to sleep.  …","Key code constant: Soft Left key. Usually situated below …","Key code constant: Soft Right key. Usually situated below …","Key code constant: put device to sleep unless a wakelock …","Key code constant: Space key.","Key code constant: Generic stem key 1 for Wear.","Key code constant: Generic stem key 2 for Wear.","Key code constant: Generic stem key 3 for Wear.","Key code constant: Primary stem key for Wear. Main …","","Key code constant: Switch Charset modifier key. Used to …","Key code constant: ‘T’ key.","Private flag that indicates when the system has detected …","Set for ACTION_UP when this event’s key value is still …","Key code constant: TV key. On TV remotes, switches to …","Key code constant: Antenna/Cable key. Toggles broadcast …","Key code constant: Audio description key. Toggles audio …","Key code constant: Audio description mixing volume down …","Key code constant: Audio description mixing volume up key. …","Key code constant: Contents menu key. Goes to the title …","Key code constant: TV data service key. Displays data …","Key code constant: TV input key. On TV remotes, switches …","Key code constant: Component #1 key. Switches to component …","Key code constant: Component #2 key. Switches to component …","Key code constant: Composite #1 key. Switches to composite …","Key code constant: Composite #2 key. Switches to composite …","Key code constant: HDMI #1 key. Switches to HDMI input #1.","Key code constant: HDMI #2 key. Switches to HDMI input #2.","Key code constant: HDMI #3 key. Switches to HDMI input #3.","Key code constant: HDMI #4 key. Switches to HDMI input #4.","Key code constant: VGA #1 key. Switches to VGA (analog …","Key code constant: Media context menu key. Goes to the …","Key code constant: Toggle Network key. Toggles selecting …","Key code constant: Number entry key. Initiates to enter …","Key code constant: TV power key. On TV remotes, toggles …","Key code constant: Radio key. Toggles TV service / Radio …","Key code constant: Satellite key. Switches to digital …","Key code constant: BS key. Switches to BS digital …","Key code constant: CS key. Switches to CS digital …","Key code constant: BS/CS key. Toggles between BS and CS …","Key code constant: Teletext key. Displays Teletext service.","Key code constant: Analog Terrestrial key. Switches to …","Key code constant: Digital Terrestrial key. Switches to …","Key code constant: Timer programming key. Goes to the …","Key code constant: Zoom mode key. Changes Zoom mode …","Key code constant: Tab key.","","","Key code constant: ‘U’ key.","Key code constant: Unknown key code.","Key code constant: ‘V’ key.","This key event was generated by a virtual (on-screen) hard …","Key code constant: Voice Assist key. Launches the global …","Key code constant: Volume Down key. Adjusts the speaker …","Key code constant: Volume Mute key. Mutes the speaker, …","Key code constant: Volume Up key. Adjusts the speaker …","Key code constant: ‘W’ key.","Key code constant: Wakeup key. Wakes up the device.  …","Key code constant: Window key. On TV remotes, toggles …","Key code constant: ‘X’ key.","Key code constant: ‘Y’ key.","Key code constant: Japanese Yen key.","Key code constant: ‘Z’ key.","Key code constant: Japanese full-width / half-width key.","","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","Tries to hide keyboard using default system mechanism.","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","Set android geolocation (with extended options)","Retrieve current geolocation (or set it on emulator)","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Tries to set location if the driver/device supports it. …","","","","","","","","","","Lock device","Unlock device","Locks the device. Note: iOS can only be unlocked manually.","Unlocks the device.","","","","Check network status (wifi, mobile data, airplane, or …","Toggle network status","","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","Record screen with Android-specific encoding options","Record screen","","Record screen with iOS-specific encoding options","","","","","","","","","","","","","","","","","","","Credentials for remote ftp/http authentication (if needed).","","","Form field name containing the binary payload in …","","","","Additional form fields in multipart/form-data requests.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Additional headers in multipart/form-data requests.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Method name for http(s) upload. PUT is used by default. …","","Path to the remote location, where the resulting video …","","Starts screen recording (Android).","Starts screen recording (Android).","","","","","","","","","","","","","","","","","","","","","","","","","Get or set orientation and rotation of device","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Set or get setting from Settings API (…","","","","Retrieve localized app strings (text used in app)","","","","Get device time","Gets device date and time for both iOS (host time is …","Gets device date and time for both iOS and Android devices …","","","","","","Locators supported by Appium","","","","","","","","","","","","Read a unique identifier for a UI element.","Locate an element using Espresso DataMatcher. (Espresso …","Locate an element using Espresso ViewMatcher. (Espresso …","Locate an element by its view tag. (Espresso only)","","","","","Locate element by its class name.","","","","","Custom locator for use with plugins registered via the …","A locator for non-standard locators","","","Locates all elements matching criteria.","Locates an element by given strategy.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Native element identifier. resource-id for android; name …","Locate an element by matching it with a base 64 encoded …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Locate an element by a class chain - a faster, but less …","A string corresponding to a recursive element search using …","Name of element.","","","","","","","","","","","Use the UI Automator API, in particular the UiSelector …","","","Search the app XML source using xpath (not recommended, …","","Wait parameters","","Set the timeout for maximum wait.","","","Sets the period to delay checks.","","Waits for element using Appium locator.","Waits for a list of elements using Appium locator.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","",""],"i":[0,0,0,0,0,1,3,1,3,0,0,1,3,3,3,0,1,3,1,3,1,1,1,3,1,3,1,3,0,0,0,0,0,0,0,81,0,81,82,81,83,81,83,81,81,81,81,83,81,0,11,83,83,11,81,0,81,81,82,81,81,81,0,83,83,83,82,81,82,11,82,81,11,11,84,11,85,81,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,0,0,0,0,0,0,0,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,28,28,28,28,28,0,0,0,0,28,28,0,0,28,28,0,28,28,28,0,28,28,0,0,0,28,0,0,0,0,0,0,28,28,28,37,0,37,0,37,39,40,40,0,40,40,40,38,38,0,0,0,40,0,0,37,39,40,38,0,38,39,39,38,39,40,39,0,0,40,39,46,46,46,46,46,37,38,39,40,46,37,38,39,40,86,86,87,37,38,39,40,88,37,38,39,40,46,37,38,39,40,46,46,46,46,37,38,39,40,89,46,90,91,89,37,38,39,40,89,89,89,89,89,86,46,90,87,46,37,38,39,40,46,37,38,39,40,46,37,38,39,40,0,0,47,47,47,47,47,92,47,92,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,92,47,47,47,47,47,92,47,47,47,47,47,92,92,47,47,47,47,47,92,47,47,47,47,47,47,0,0,93,93,94,0,0,0,54,55,54,54,55,0,0,54,54,55,55,95,56,54,55,56,54,55,54,55,54,55,56,54,55,54,55,56,54,55,56,54,55,96,56,56,96,56,56,96,56,56,96,56,56,56,56,56,54,55,56,54,55,56,54,55,56,54,55,0,0,0,58,58,58,58,58,58,58,58,58,58,97,97,58,58,97,98,97,98,58,58,58,58,0,99,99,99,0,0,100,100,101,0,102,64,61,61,61,61,64,64,64,64,0,0,0,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,62,62,61,61,61,61,61,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,63,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,62,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,62,62,61,64,64,64,64,64,64,64,64,0,64,64,64,0,0,64,64,64,64,64,64,62,64,64,64,64,0,64,64,64,62,64,64,64,64,61,61,61,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,61,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,62,64,64,64,64,64,64,64,64,64,63,63,0,64,64,64,64,64,64,64,64,64,61,61,61,61,61,62,62,64,64,64,61,61,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,63,64,64,62,62,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,63,63,64,64,64,62,64,64,64,64,64,64,64,64,64,64,64,64,60,60,61,62,61,62,61,62,61,62,61,62,61,61,62,62,61,62,61,62,63,60,64,61,62,63,60,64,61,62,63,60,64,61,62,63,60,64,61,62,61,62,61,62,63,61,62,61,62,63,64,61,62,61,62,60,63,60,64,61,61,61,61,61,62,62,62,62,62,63,60,60,64,61,62,61,62,61,61,62,62,61,62,61,62,61,62,64,61,62,103,103,103,61,62,61,62,61,62,63,60,64,61,62,61,62,61,62,61,62,61,62,61,62,104,60,105,60,60,61,62,105,61,62,60,60,63,60,64,61,62,61,62,61,62,61,62,63,60,64,61,62,61,62,63,60,64,61,62,63,60,64,61,62,63,60,64,61,62,61,62,60,60,0,0,0,0,65,66,65,66,65,66,65,66,65,66,65,65,66,65,66,65,66,65,66,106,65,66,65,66,66,65,66,107,106,66,65,66,65,66,65,66,65,66,0,0,108,109,67,0,67,0,0,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,110,67,67,67,67,67,67,67,67,67,67,67,67,67,110,67,67,67,67,67,111,111,111,67,67,67,67,0,0,71,0,0,71,71,71,0,0,69,70,71,69,70,71,69,70,71,69,70,71,69,69,71,69,69,70,71,69,69,70,71,69,69,70,71,69,70,69,71,112,113,114,114,112,113,114,114,69,69,70,71,69,70,71,69,70,71,69,70,71,70,0,74,0,74,0,74,73,74,73,73,73,74,73,74,73,74,74,73,74,73,74,73,73,115,115,74,115,115,73,74,74,73,74,73,74,73,0,116,116,116,0,117,117,117,0,118,118,77,77,77,77,0,0,77,77,77,77,77,77,77,0,77,77,77,77,77,77,77,77,78,77,78,77,77,78,77,78,77,77,77,78,119,119,77,78,77,78,78,77,77,77,78,77,77,77,77,78,77,78,77,78,77,78,77,78,77,78,78,77,0,0,120,79,79,79,79,79,79,79,79,79,79,79,79],"f":[0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[1,[-1,-2]],2],[[5,[[3,[-2]],4]]],[6,7,8,9,10],11],[[[3,[-1]]],[],11],[[[3,[-1]]],[],11],[[[3,[-1]]],12,11],0,[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[[14,[13]],-1]]],11],[[[15,[-1]],-2],[[1,[-1,-2]]],[6,7,8,9,10],11],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],0,0,0,0,0,0,0,[[-1,17],12,[]],0,[[-1,18],12,[]],[[-1,2],12,[]],[[-1,2],12,[]],[[-1,2],12,[]],[[-1,2],12,[]],[[-1,18],12,[]],[[-1,2],12,[]],[[-1,18],12,[]],[[-1,17],12,[]],[[-1,2],12,[]],[[-1,17],12,[]],[[-1,17],12,[]],0,[[-1,2],12,[]],[[-1,2],12,[]],[[-1,2],12,[]],[[-1,2],12,[]],[[-1,17],12,[]],0,[[-1,17],12,[]],[[-1,17],12,[]],[[-1,17],12,[]],[[-1,2],12,[]],[[-1,2],12,[]],[[-1,2],12,[]],0,[[-1,2],12,[]],[[-1,2],12,[]],[[-1,2],12,[]],[[-1,17],12,[]],[[-1,2],12,[]],[[-1,[19,[2]]],12,[]],[[-1,2],12,[]],[[-1,17],12,[]],[[-1,20],12,[]],[[-1,2,17],12,[]],[[-1,2,21],12,[]],[[-1,2,22],12,[]],[[-1,2,2],12,[]],[[-1,2],12,[]],[[-1,2],12,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[23,23],[[-1,-2],12,[],[]],[[],23],[23],[23],[[23,23],17],[[23,24],25],[-1,-1,[]],[-1,-2,[],[]],[[],23],[[],23],[[],23],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,16,[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[26,26],[[-1,-2],12,[],[]],[[],26],[26],[26],[[26,26],17],[[26,24],25],[-1,-1,[]],[-1,-2,[],[]],[[],26],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,16,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[27,27],[[-1,-2],12,[],[]],[[],27],[27],[27],[[27,27],17],[[27,24],25],[-1,-1,[]],[-1,-2,[],[]],[[],27],[[],27],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,16,[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[28,29,[30,[2]]],[[5,[29,31]]]],[[28,28],17],0,[[28,24],25],[-1,-1,[]],[-1,-2,[],[]],0,[28,17],[28,17],0,0,0,[[28,29],[[12,[32,[30,[33]]]]]],0,0,0,0,0,0,[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,16,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[36,[[35,[34]]]]],8],[-1,[[36,[[35,[34]]]]],8],[-1,[[36,[[35,[34]]]]],8],[[37,37],17],[[38,38],17],[[39,39],17],[[40,40],17],[[-1,2,[30,[[41,[33,22]]]]],[[36,[[35,[34]]]]],8],[[37,24],25],[[38,24],25],[[39,24],25],[[40,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,2,37],[[36,[[35,[34]]]]],8],0,[[-1,2,2,42],[[36,[[35,[34]]]]],8],[[-1,43,2],[[36,[[35,[34]]]]],8],[[-1,2,2],[[36,[[35,[34]]]]],8],[[37,-1],5,44],[[38,-1],5,44],[[39,-1],5,44],[[40,-1],5,44],[[-1,39],[[36,[[35,[34]]]]],8],[[-1,40],[[36,[[35,[34]]]]],8],[[-1,17],[[36,[[35,[34]]]]],8],[[-1,45],[[36,[[35,[34]]]]],8],[[-1,38],[[36,[[35,[34]]]]],8],[[-1,46],[[36,[[35,[34]]]]],8],0,[-1,[[36,[[35,[34]]]]],8],[-1,[[36,[[35,[34]]]]],8],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],0,0,0,0,0,0,0,[[-1,2],[[36,[[35,[34]]]]],8],[[],47],[[-1,2],[[36,[[35,[34]]]]],8],[[47,47],47],[[47,47],12],[[47,47],47],[[47,47],12],[47,48],[47,48],[[47,47],47],[[47,47],12],[-1,-2,[],[]],[-1,-2,[],[]],[47,47],[[-1,-2],12,[],[]],[47,47],[[47,47],17],[-1,[[5,[47]]],49],[[47,47],47],[[],47],[[47,47],17],[[47,-1],12,50],[[47,24],25],[[47,24],25],[[47,24],25],[[47,24],25],[[47,24],25],[-1,-1,[]],[48,[[30,[47]]]],[48,47],[48,47],[48,47],[-1,47,50],[2,[[30,[47]]]],[[47,-1],12,51],[[47,47],12],[[-1,2],[[36,[[35,[34]]]]],8],[[47,47],47],[[47,47],17],[-1,-2,[],[]],[47],[47,17],[[-1,2],[[36,[[35,[34]]]]],8],[47,17],[47,[[52,[47]]]],[47,[[53,[47]]]],[47,47],[[47,47],12],[[-1,2],[[36,[[35,[34]]]]],8],[[-1,18],[[36,[[35,[34]]]]],8],[[47,-1],5,44],[[47,47,17],12],[[47,47],47],[[47,47],12],[[47,47],47],[[-1,2],[[36,[[35,[34]]]]],8],[-1,-2,[],[]],[[47,47],12],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,16,[]],[[47,47],47],0,0,[[-1,17],[[36,[[35,[34]]]]],8],[[-1,17],[[36,[[35,[34]]]]],8],[[-1,45],[[36,[[35,[34]]]]],8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[36,[[35,[34]]]]],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[54,54],[55,55],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[[56,[-1]]],[],11],[[54,54],17],[[55,55],17],[[54,24],25],[[55,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,17,[]],[[[56,[27]]],17],[[[56,[23]]],17],[-1,17,[]],[[[56,[23]]],17],[[[56,[27]]],17],[-1,17,[]],[[[56,[23]]],17],[[[56,[27]]],17],[-1,17,[]],[[[56,[27]]],17],[[[56,[23]]],17],[[[56,[-1]]],57,11],[[[56,[23]]],54],[[[56,[27]]],55],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[58,58],[[-1,-2],12,[],[]],[[58,58],17],[[58,24],25],[-1,-1,[]],[[-1,58],[[36,[[35,[34]]]]],8],[-1,[[36,[[35,[34]]]]],8],[-1,-2,[],[]],[[58,-1],5,44],[[-1,58,-2],[[36,[[35,[34]]]]],8,[[59,[[19,[45]]]],7]],[[-1,2,58,-2],[[36,[[35,[34]]]]],8,[[59,[[19,[45]]]],7]],[[-1,-2],[[36,[[35,[34]]]]],8,[[59,[[19,[45]]]],7]],[[-1,2,-2],[[36,[[35,[34]]]]],8,[[59,[[19,[45]]]],7]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,16,[]],0,[-1,[[36,[[35,[34]]]]],8],[-1,[[36,[[35,[34]]]]],8],[[-1,2],[[36,[[35,[34]]]]],8],0,0,[[-1,2],[[36,[[35,[34]]]]],8],[[-1,2],[[36,[[35,[34]]]]],8],[[-1,2,[19,[45]]],[[36,[[35,[34]]]]],8],0,[-1,[[36,[[35,[34]]]]],8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[60,61],12],[[60,61],12],[[],61],[[],62],[[61,61],61],[[62,62],62],[[61,61],12],[[62,62],12],[[61,61],61],[[62,62],62],[[61,61],12],[[62,62],12],[61,42],[61,42],[62,42],[62,42],[[61,61],61],[[62,62],62],[[61,61],12],[[62,62],12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[63,63],[60,60],[64,64],[61,61],[62,62],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[61,61],[62,62],[[61,61],17],[[62,62],17],[-1,[[5,[63]]],49],[[61,61],61],[[62,62],62],[[],61],[[],62],[[63,63],17],[[64,64],17],[[61,61],17],[[62,62],17],[[61,-1],12,50],[[62,-1],12,50],0,[[63,24],25],[[60,24],25],[[64,24],25],[[61,24],25],[[61,24],25],[[61,24],25],[[61,24],25],[[61,24],25],[[62,24],25],[[62,24],25],[[62,24],25],[[62,24],25],[[62,24],25],[-1,-1,[]],[-1,-1,[]],[64,60],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[42,[[30,[61]]]],[42,[[30,[62]]]],[42,61],[42,61],[42,62],[42,62],[42,61],[42,62],[-1,61,50],[-1,62,50],[2,[[30,[61]]]],[2,[[30,[62]]]],[[64,-1],12,51],[[61,-1],12,51],[[62,-1],12,51],[-1,[[36,[[35,[34]]]]],8],[[-1,2],[[36,[[35,[34]]]]],8],[[-1,63,2],[[36,[[35,[34]]]]],8],[[61,61],12],[[62,62],12],[[61,61],61],[[62,62],62],[[61,61],17],[[62,62],17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[61],[62],[61,17],[62,17],[61,17],[62,17],[61,[[52,[61]]]],[62,[[52,[62]]]],[61,[[53,[61]]]],[62,[[53,[62]]]],[-1,[[36,[[35,[34]]]]],8],0,[[-1,60],[[36,[[35,[34]]]]],8],0,[64,60],[61,61],[62,62],[[-1,60],[[36,[[35,[34]]]]],8],[[61,61],12],[[62,62],12],[[60,61],12],[[60,61],12],[[63,-1],5,44],[[60,-1],5,44],[[64,-1],5,44],[[61,61,17],12],[[62,62,17],12],[[61,61],61],[[62,62],62],[[61,61],12],[[62,62],12],[[61,61],61],[[62,62],62],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[61,61],12],[[62,62],12],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[[61,61],61],[[62,62],62],[[60,62],60],[[60,61],60],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[65,65],[66,66],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[-1,[[5,[65]]],49],[[65,24],25],[[66,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[36,[[35,[34]]]]],8],0,0,[[57,57,57],65],[[65,42,57],66],0,[[65,-1],5,44],[[66,-1],5,44],[[-1,66],[[36,[[35,[34]]]]],8],[[-1,65],[[36,[[35,[34]]]]],8],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],0,0,[-1,[[36,[[35,[34]]]]],8],[-1,[[36,[[35,[34]]]]],8],0,0,0,0,0,0,[[],67],[[67,67],67],[[67,67],12],[[67,67],67],[[67,67],12],[67,68],[67,68],[[67,67],67],[[67,67],12],[-1,-2,[],[]],[-1,-2,[],[]],[67,67],[[-1,-2],12,[],[]],[67,67],[[67,67],17],[[67,67],67],[[],67],[[67,67],17],[[67,-1],12,50],[[67,24],25],[[67,24],25],[[67,24],25],[[67,24],25],[[67,24],25],[-1,-1,[]],[68,[[30,[67]]]],[68,67],[68,67],[68,67],[-1,67,50],[2,[[30,[67]]]],[-1,[[36,[[35,[34]]]]],8],[[67,-1],12,51],[[67,67],12],[[67,67],67],[[67,67],17],[-1,-2,[],[]],[67],[67,17],[67,17],[67,[[52,[67]]]],[67,[[53,[67]]]],[67,67],[[67,67],12],[[67,67,17],12],[[-1,67],[[36,[[35,[34]]]]],8],[[67,67],67],[[67,67],12],[[67,67],67],[-1,-2,[],[]],[[67,67],12],[-1,[[36,[[35,[34]]]]],8],[-1,[[36,[[35,[34]]]]],8],[-1,[[36,[[35,[34]]]]],8],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,16,[]],[[67,67],67],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[69,69],[70,70],[71,71],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],0,[[],69],[[71,71],17],0,[[69,24],25],[[70,24],25],[[71,24],25],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[71,-1],5,44],[[-1,[30,[42]],[30,[33]],[30,[17]],[30,[17]],[30,[18]],69],[[36,[[35,[34]]]]],8],[[-1,[30,[33]],[30,[71]],[30,[45]],[30,[33]],[30,[33]],[30,[17]],[30,[18]],69],[[36,[[35,[34]]]]],8],[-1,[[36,[[35,[34]]]]],8],[[-1,[30,[17]],[30,[18]],[41,[33,22]]],[[36,[[35,[34]]]]],8],[[-1,69],[[36,[[35,[34]]]]],8],[[-1,69],[[36,[[35,[34]]]]],8],[-1,[[36,[[35,[34]]]]],8],[[-1,[41,[33,22]]],[[36,[[35,[34]]]]],8],[69,[[5,[[41,[33,22]],72]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[73,73],[[-1,-2],12,[],[]],[-1,[[5,[74]]],49],[-1,[[5,[73]]],49],[[74,74],17],[[73,73],17],[[74,24],25],[[74,24],25],[[73,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[68,68,68],[[5,[73,75]]]],[-1,[[36,[[35,[34]]]]],8],[-1,[[36,[[35,[34]]]]],8],[[74,-1],5,44],[[-1,74],[[36,[[35,[34]]]]],8],[[-1,73],[[36,[[35,[34]]]]],8],[-1,-2,[],[]],[-1,33,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],0,[-1,[[36,[[35,[34]]]]],8],[[-1,2,22],[[36,[[35,[34]]]]],8],[[-1,[76,[33,22]]],[[36,[[35,[34]]]]],8],0,[[-1,2],[[36,[[35,[34]]]]],8],[-1,[[36,[[35,[34]]]]],8],[[-1,2,2],[[36,[[35,[34]]]]],8],0,[-1,[[36,[[35,[34]]]]],8],[[-1,2],[[36,[[35,[34]]]]],8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2,77],[2,77],[2,77],[2,77],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,77],[77,77],[78,78],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[2,77],[[2,2],77],[[77,77],17],[[78,78],17],[[-1,77],[[36,[[35,[34]]]]],[]],[[-1,77],[[36,[[35,[34]]]]],[]],[[77,24],25],[[78,24],25],[-1,-1,[]],[-1,-1,[]],[77,78],[2,77],[2,77],[-1,-2,[],[]],[-1,-2,[],[]],[2,77],[2,77],[2,77],[[77,-1],5,44],[[78,-1],5,44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[2,77],0,0,[2,77],0,0,[-1,79,[]],[[79,18],79],[-1,-2,[],[]],[-1,-2,[],[]],[[79,18],79],[[79,24],25],[[79,77],[[5,[43,75]]]],[[79,77],[[5,[[80,[43]],75]]]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,16,[]]],"c":[],"p":[[3,"ClientBuilder",0],[15,"str"],[3,"Client",0],[4,"NewSessionError",1244],[4,"Result",1245],[8,"Connect",1246],[8,"Send",1247],[8,"Sync",1247],[8,"Clone",1248],[8,"Unpin",1247],[8,"AppiumCapability",29],[15,"tuple"],[3,"HttpConnector",1249],[3,"HttpsConnector",1250],[3,"ClientBuilder",1251],[3,"TypeId",1252],[15,"bool"],[3,"Duration",1253],[15,"slice"],[15,"u64"],[3,"Number",1254],[4,"Value",1255],[3,"AndroidCapabilities",78],[3,"Formatter",1256],[6,"Result",1256],[3,"EmptyCapabilities",105],[3,"IOSCapabilities",122],[4,"AppiumCommand",140],[3,"Url",1257],[4,"Option",1258],[4,"ParseError",1259],[3,"Method",1260],[3,"String",1261],[8,"Future",1262],[3,"Box",1263],[3,"Pin",1264],[4,"GsmCallAction",176],[4,"GsmSignalStrength",176],[4,"GsmVoiceState",176],[4,"NetworkSpeed",176],[3,"HashMap",1265],[15,"u32"],[3,"Element",1266],[8,"Serializer",1267],[15,"u8"],[3,"AndroidActivity",176],[3,"AppState",284],[15,"i8"],[8,"Deserializer",1268],[8,"IntoIterator",1269],[8,"Hasher",1270],[3,"Iter",1271],[3,"IterNames",1271],[4,"AndroidBatteryState",358],[4,"IOSBatteryState",358],[3,"BatteryInfo",358],[15,"f64"],[4,"ClipboardContentType",420],[8,"AsRef",1272],[3,"KeyEvent",456],[3,"AndroidKeyMetaModifier",456],[3,"AndroidKeyFlag",456],[4,"HideKeyboardStrategy",456],[4,"AndroidKey",456],[3,"Location",947],[3,"AndroidGeoLocation",947],[3,"ConnectionState",993],[15,"u16"],[3,"ScreenRecordingUploadOptions",1057],[3,"ScreenRecordingCredentials",1057],[4,"IOSVideoQuality",1057],[3,"Error",1273],[3,"DeviceRotation",1120],[4,"Orientation",1120],[4,"CmdError",1244],[3,"Map",1274],[4,"By",1167],[3,"LocatorParameters",1167],[3,"Wait",1229],[3,"Vec",1275],[8,"UiAutomator2AppCompatible",29],[8,"AppCapable",29],[8,"XCUITestAppCompatible",29],[8,"AppiumSettingsCapable",29],[8,"UdidCapable",29],[8,"StartsActivity",176],[8,"HasAndroidDeviceDetails",176],[8,"ExecutesCDP",176],[8,"SupportsSpecialEmulatorCommands",176],[8,"HasSupportedPerformanceDataType",176],[8,"CanReplaceValue",176],[8,"InteractsWithApps",284],[8,"PerformsTouchID",353],[8,"AuthenticatesByFinger",353],[8,"HasBattery",358],[8,"CanBeCharged",358],[8,"HasClipboard",420],[8,"HasAndroidClipboard",420],[8,"SupportsContextSwitching",445],[8,"PullsFiles",449],[8,"PushesFiles",449],[8,"ShakesDevice",454],[8,"HidesKeyboard",456],[8,"HasOnScreenKeyboard",456],[8,"PressesKey",456],[8,"SupportsLocation",947],[8,"SupportsAndroidLocation",947],[8,"LocksDevice",989],[8,"UnlocksDevice",989],[8,"HasNetworkState",993],[8,"SupportsNetworkStateManagement",993],[8,"AndroidCanRecordScreen",1057],[8,"IOSCanRecordScreen",1057],[8,"CanRecordScreen",1057],[8,"SupportsRotation",1120],[8,"HasSettings",1156],[8,"HasAppStrings",1160],[8,"HasDeviceTime",1164],[8,"AppiumFind",1167],[8,"AppiumWait",1229]],"b":[[298,"impl-Flags-for-AppState"],[299,"impl-AppState"],[313,"impl-Octal-for-AppState"],[314,"impl-Binary-for-AppState"],[315,"impl-LowerHex-for-AppState"],[316,"impl-Debug-for-AppState"],[317,"impl-UpperHex-for-AppState"],[320,"impl-Flags-for-AppState"],[321,"impl-AppState"],[395,"impl-CanBeCharged-for-BatteryInfo%3CIOSCapabilities%3E"],[396,"impl-CanBeCharged-for-BatteryInfo%3CAndroidCapabilities%3E"],[398,"impl-CanBeCharged-for-BatteryInfo%3CAndroidCapabilities%3E"],[399,"impl-CanBeCharged-for-BatteryInfo%3CIOSCapabilities%3E"],[401,"impl-CanBeCharged-for-BatteryInfo%3CAndroidCapabilities%3E"],[402,"impl-CanBeCharged-for-BatteryInfo%3CIOSCapabilities%3E"],[404,"impl-CanBeCharged-for-BatteryInfo%3CIOSCapabilities%3E"],[405,"impl-CanBeCharged-for-BatteryInfo%3CAndroidCapabilities%3E"],[407,"impl-BatteryInfo%3CAndroidCapabilities%3E"],[408,"impl-BatteryInfo%3CIOSCapabilities%3E"],[796,"impl-AndroidKeyMetaModifier"],[797,"impl-Flags-for-AndroidKeyMetaModifier"],[798,"impl-AndroidKeyFlag"],[799,"impl-Flags-for-AndroidKeyFlag"],[843,"impl-UpperHex-for-AndroidKeyMetaModifier"],[844,"impl-Binary-for-AndroidKeyMetaModifier"],[845,"impl-LowerHex-for-AndroidKeyMetaModifier"],[846,"impl-Octal-for-AndroidKeyMetaModifier"],[847,"impl-Debug-for-AndroidKeyMetaModifier"],[848,"impl-UpperHex-for-AndroidKeyFlag"],[849,"impl-Binary-for-AndroidKeyFlag"],[850,"impl-Debug-for-AndroidKeyFlag"],[851,"impl-LowerHex-for-AndroidKeyFlag"],[852,"impl-Octal-for-AndroidKeyFlag"],[861,"impl-Flags-for-AndroidKeyMetaModifier"],[862,"impl-AndroidKeyMetaModifier"],[863,"impl-AndroidKeyFlag"],[864,"impl-Flags-for-AndroidKeyFlag"],[1004,"impl-ConnectionState"],[1005,"impl-Flags-for-ConnectionState"],[1018,"impl-Binary-for-ConnectionState"],[1019,"impl-LowerHex-for-ConnectionState"],[1020,"impl-Octal-for-ConnectionState"],[1021,"impl-UpperHex-for-ConnectionState"],[1022,"impl-Debug-for-ConnectionState"],[1025,"impl-Flags-for-ConnectionState"],[1026,"impl-ConnectionState"],[1135,"impl-Display-for-Orientation"],[1136,"impl-Debug-for-Orientation"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
